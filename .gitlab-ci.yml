image: golang:1.10

variables:
  GOPACKAGE: go.htdvisser.nl/eui

cache:
  paths:
  - .go/src/github.com/golang
  - .go/pkg/dep
  - .go/tmp

before_script:
- export GOPATH=$(realpath .)/.go
- if [[ ! -d $GOPATH ]]; then mkdir -p $GOPATH; fi
- export PATH="$PATH:$GOPATH/bin"
- export GOTMPDIR=$GOPATH/tmp
- if [[ ! -d $GOTMPDIR ]]; then mkdir -p $GOTMPDIR; fi
- go get -u github.com/golang/dep/cmd/dep
- mkdir -p $GOPATH/src/$(dirname $GOPACKAGE)
- ln -svf $CI_PROJECT_DIR $GOPATH/src/$GOPACKAGE
- cd $GOPATH/src/$GOPACKAGE
- dep ensure -v -vendor-only

stages:
- test
- build

test:
  stage: test
  script:
  - go fmt ./...
  - go vet ./...
  - go test -cover -race -coverprofile=coverage.txt -covermode=atomic ./...
  - bash <(curl -s https://codecov.io/bash)

build:
  stage: build
  artifacts:
    paths:
    - dist
  script:
  - if [[ ! -d dist ]]; then mkdir dist; fi
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -gcflags="all=-trimpath=$GOPATH" -asmflags="all=-trimpath=$GOPATH" -ldflags "-s -w" -o dist/whois-eui-linux-amd64 ./cmd/whois-eui/main.go
  - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -gcflags="all=-trimpath=$GOPATH" -asmflags="all=-trimpath=$GOPATH" -ldflags "-s -w" -o dist/whois-eui-darwin-amd64 ./cmd/whois-eui/main.go
  - CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -gcflags="all=-trimpath=$GOPATH" -asmflags="all=-trimpath=$GOPATH" -ldflags "-s -w" -o dist/whois-eui-windows-amd64.exe ./cmd/whois-eui/main.go
